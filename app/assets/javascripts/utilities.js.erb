$(document).ready(function() {

  // CHARTS on /index
  rest = $(".chartlist.types li")
  .filter(function(index) {
    return index >= 12;
  })
  rest.hide();
  $("button.list-toggle").click(function() {
    $(this).toggleClass("show");
    rest.slideToggle("medium");
  });

  // CARDS ON about/data/providers
  $("button.card-toggle").click(function() {
    $(this).parent().parent().next().slideToggle("medium");
  });

  /*
    CARDS ON SERP PAGE
    1) Override default behavior on clicked link
    2) Animate the clicked logo
    3) Show corresponding card
  */
  $("ul.data-provider-logos-list li a").click(function(event) {
    event.preventDefault();

    previousLogo = $("ul.data-provider-logos-list li.logo-clicked")
    // console.log(previousLogo);
    if (!previousLogo.is($(this).parent())) { previousLogo.toggleClass("logo-clicked"); }
    $(this).parent().toggleClass("logo-clicked");

    previousCard = $("ul.data-provider-cards-list li[style^='display: list-item']")
    klass = $(this).parent().attr("class").split(" ")[0]; // we only need the first class
    clickedCard = $("ul.data-provider-cards-list li[id^=" +klass+ "]")

    if (!previousCard.is(clickedCard)) { previousCard.slideToggle("fast"); }
    clickedCard.slideToggle("slow");
  });

  // PRINTING RECORDS
  $('#print-selected').click(function() { window.print(); });

  /*
  ADAPTED FROM:
  GH SOURCE

  This function will shorten a list of e.g. author or affiliation links
  down to an expandable list of at most N elements. It expects to be passed
  an array of elements (excluding the separators) and expects the separators
  in the dom to be elements (not text nodes). Example:
  For an author list the dom could be
    <a>author1</a><span>, </span><a>author2</a>
  And the "elements" parameter should be [<a>author1</a>, <a>author2</a>]
  */
  var shorten_list = function(elements, N, suffix) {
    if (elements.length > N) {
      var hide_last = $('<span class="hide-last"> (<a href="#"><%= I18n.t("blacklight.search.fields.show.shortened_list.hide_last") %> ' + (elements.length-N) + '</a>)</span>').insertAfter(elements.last());
      hide_last.click(function() {
        $(elements[N-1]).nextAll().toggleClass('hidden');
        return false;
      });
      hide_last.click();

      var et_al = $('<span class="et-al">' + suffix + '</span>').insertAfter(elements[N-1]).last();
      var show_all = $('<span class="show-all"> (<a href="#"><%= I18n.t("blacklight.search.fields.show.shortened_list.show_all") %> ' + elements.length + '</a>)</span>').insertAfter(et_al).find('a').last();
      show_all.click(function() {
        $(elements[N-1]).nextAll().toggleClass('hidden');
        return false;
      });
    }
  }

  // Shorten author and affiliation lists to at most 3 items:
  // on catalog#show
  shorten_list($('#document dd.blacklight-author_ts > span.author'), 3, ', <%= I18n.t("blacklight.search.fields.show.shortened_list.et_al") %>');
  // on catalog#index
  $('.document').each(function() {
    var authors = $(this).find('dd.blacklight-author_ts > span.author');
    shorten_list(authors, 3, ', <%= I18n.t("blacklight.search.fields.show.shortened_list.et_al") %>')
  });

  // not used in DDF:
  // shorten_list($('#document dd.blacklight-affiliation_ts > span'), 3, '');

// doc ready end
});


// $(".myClass").each(function() {});
